if you want to see the routes of your rails app

  rails routes

if you want to filter the routes for a specific controller

  bundle exec rails routes -c usernames # where c means controller

  other ways to filter routes (no way to filter default routes from user created routes)

    bundle exec rails routes | grep -E '(products|orders)'
    bundle exec rails routes | grep api

if you want to test routes in rails console you will need to import them first

  apply this command to import them

    include Rails.application.routes.url_helpers

      then you will be able to use methods like users_path(user_1)

you can check more options at

  bundle exec rails routes --help


paths like 'new_username_path' can be obtained when looking at all the routes

  when checking all the routes with rails routes or through looking at localhost:3000/rails/info/routes

    look at the prefix route and then just at '_path' at the end

      example
                Prefix Verb  URI Pattern              Controller#Action
          new_username GET   /usernames/new(.:format) usernames#new
              username PATCH /usernames/:id(.:format) usernames#update
                       PUT   /usernames/:id(.:format) usernames#update

          for this case you can see that if you want to redirect to the view to create a new username (usernames#new)
            you can do this
              redirect_to new_username_path


you can set only methods to create a few routes
  resources :usernames, only: [:new, :update]

  this line only creates
    GET /usersnames/new --- which will go to controller#action -> usernames#new
    PATCH /usernames/:id --- usernames#update
    PUT /usernames/:id --- usernames#update


you can let the urls in the browser have a different name for what they really are

  for example if the url path for the browser should be /explore but really all it does is to index all hashtags you can do this
    in your routes.rb file

      resources :hashtags, only: :index, path: "/explore"

nested routes

  this single line
    resources :users, only: :show

  generates this route

    | Prefix | Verb | URI Pattern | Controller#Action |
    | ------ | ---- | ----------- | ----------------- |
    | user   | GET  | /users/:id  | users#show        |
    |        |      |             |                   |

  but if you nest it with another resource
    resources :users, only: :show do
      resources :followings, only: [:update, :destroy]
    end

  it generates the other necessary routes under the same base route you defined before

    | Prefix         | Verb   | URI Pattern                    | Controller#Action  |
    | -------------- | ------ | ------------------------------ | ------------------ |
    | user           | GET    | /users/:id                     | users#show         |
    |                |        |                                |                    |
    | user_following | PATCH  | /users/:user_id/followings/:id | followings#update  |
    |                | PUT    | /users/:user_id/followings/:id | followings#update  |
    |                | DELETE | /users/:user_id/followings/:id | followings#destroy |
    |                |        |                                |                    |

