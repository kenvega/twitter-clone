to run your created migrations (for db and test db)

  bundle exec rails db:migrate db:test:prepare

if you are in development and want to have your tables empty

  bundle exec rails db:drop db:create db:migrate # CAREFUL!!! will destroy all records of data in all tables

first migration to change a table was to add a username field to the users table

  you can use camel case or snake case in the migration name. both will work the same

    bundle exec rails g migration add_username_to_users username:string

    bundle exec rails g migration AddUsernameToUsers other:string

example on how to add a column with a unique index

  def change
    add_column :users, :username, :string, index: { unique: true }
  end

t.index

  # add unique index because user cannot follow the same person twice
  t.index [:follower_id, :followed_id], unique: true

t.references

  it also adds columns to the table just like t.integer or t.string

  but apart from adding a column it also adds a foreign key

list of migrations/commands done in this project

  bundle exec rails generate rspec:install

  bundle exec rails generate devise:install

  bundle exec rails g devise user

  bundle exec rails g devise:views

  bundle exec rails g model Tweet user:references body:string

  bundle exec rails g model like tweet:references user:references

  bundle exec rails g migration add_uniqueness_constraint_to_likes

  bundle exec rails g migration add_likes_count_to_tweets likes_count:integer

  bundle exec rails g model Bookmark user:references tweet:references

  bundle exec rails g migration add_retweets_count_to_tweets retweets_count:integer

  bundle exec rails g stimulus tweet_card

  bundle exec rails g model View user:references tweet:references

  bundle exec rails g migration add_views_count_to_tweets views_count:integer
    # learned here that the migration file and its class name can change after you generate them. no problem from rails
        issue here is that first it was called viewed_count instead of views_count
          then a rollback was made and then the file name, the column name and the class name of the migration were changed
            no problems from rails were created from this
              I thought when using generators somehow the records of the rails app were locked to certain names that couldn't be changed later  
                (there are so many files in the rails app so I thought something like that might happen)

  bundle exec rails g migration add_parent_tweet_id_to_tweets tweet_id:bigint
    notice we add a tweet_id as bigint to be consistent with the tweet_id that is already in our tables (is bigint/int8 already)

  bundle exec rails g migration add_bio_to_users bio:text
    in larger apps bio should be added to another table called profiles
      this way the core user data can be accessed quicker and the less frequently accessed potentially larger profile data stays also organized
        querying the user data this way will be faster

  bundle exec rails g migration add_location_to_users location:string
  bundle exec rails g migration add_location_to_users bio:string
  bundle exec rails g migration add_url_to_users url:string

  bundle exec rails g model Follow follower:references followed:references

  bundle exec rails g model hashtag tag:string

  bundle exec rails g migration create_hashtags_tweets_table

  bundle exec rails g migration add_index_to_tag_column_on_hashtags

  bundle exec rails g model message body:text
    the sender is added later in the migration

    body is null false -- no empty body messages allowed

  bundle exec rails g model channel

  bundle exec rails g model Subscription user:references channel:references

    a join table to list all the channels a user pertains to

  bundle exec rails g migration add_channels_reference_to_messages channel:references

    a message pertains to a channel

  bundle exec rails g model notification notifier:references notified:references tweet:references action:string

  bundle exec rails g model mention tweet:references mentioned_user:references

  bundle exec rails g model tweet_activity user:references tweet:references activity:string

