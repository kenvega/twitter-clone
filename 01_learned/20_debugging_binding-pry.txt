when you do ./bin/dev

  when debugging set a binding.pry in the code

    and then try to run the method '.errors' on objects you think something went wrong

      user.errors
      current_user.errors

    once you finish put this command to return to normal mode without killing the processes

      exit

  foreman is running many processes in one terminal

    and that is not very good at capturing input (needed to debug)

    these resources might help with that

      https://github.com/ruby/debug/issues/603

      https://github.com/ruby/debug/issues/653

      https://github.com/ruby/debug#control-flow

      https://dev.to/ayushn21/remote-debugging-in-rails-7-49nh

if you run your tests you can also do a binding.pry

  then run the tests and they will stop where you needed them to stop

    could be useful too

if you want to debug values in a view you can do this

  put a <% raise %> in the view

    this will generate an error in the view and you will get a console in the webpage below where you can test your values

if you created a new model and were testing stuff that you want now to be deleted

  User.destroy_all

    something like this in a rails console where User can be replaced for the model you were creating records for can help