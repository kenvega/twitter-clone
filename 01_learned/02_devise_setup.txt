https://github.com/heartcombo/devise

add the gem (try to maintain the alphabetic order of gems)

  gem 'devise'

then install the gem

  in root of the project run
    bundle

run the devise generator

  bundle exec rails generate devise:install

  this creates config files for devise
    config/initializers/devise.rb # config file for many options you can set in devise (email configs for sender, notifications, etc)
    config/locales/devise.en.yml # translations for messages to show related to sign in, password recovery, etc

setup the initial model

  generate our first user model
    bundle exec rails g devise user

    this creates files

      invoke  active_record
      create    db/migrate/20230206020419_devise_create_users.rb # migration that creates user table with all user related fields (password recover, confirm email, lock account)
      create    app/models/user.rb
      invoke    rspec
      create      spec/models/user_spec.rb
      invoke      factory_bot
      create        spec/factories/users.rb
      insert    app/models/user.rb
      route  devise_for :users

run the migration created for the user

  bundle exec rails db:migrate db:test:prepare


some helper methods you can use from devise in the rails view files

  user_signed_in?

    ejm
      <% if user_signed_in? %>
      <% else %>
      <% end %>

in a view you can redirect the user to sign up

  <%= link_to "Sign up", new_user_registration_path %>

  that path is added by devise

  it takes the user to `/users/sign_up` and shows them a form to sign up that you didn't create

to redirect to log in

  new_user_session_path

  example

    <%= link_to "Log in", new_user_session_path, class: "btn btn-outline-primary btn-lg" %>

to customize the devise views (the log in / sign up)

  you need to generate the views first otherwise you will get the default views

  so to generate them you run this

    bundle exec rails g devise:views

      this will generate a lot of views but they will be then customizable

        create    app/views/devise/shared
        create    app/views/devise/shared/_error_messages.html.erb
        create    app/views/devise/shared/_links.html.erb
        invoke  form_for
        create    app/views/devise/confirmations
        create    app/views/devise/confirmations/new.html.erb
        create    app/views/devise/passwords
        create    app/views/devise/passwords/edit.html.erb
        create    app/views/devise/passwords/new.html.erb # forgot password page
        create    app/views/devise/registrations
        create    app/views/devise/registrations/edit.html.erb
        create    app/views/devise/registrations/new.html.erb # sign up page
        create    app/views/devise/sessions
        create    app/views/devise/sessions/new.html.erb # login page
        create    app/views/devise/unlocks
        create    app/views/devise/unlocks/new.html.erb
        invoke  erb
        create    app/views/devise/mailer
        create    app/views/devise/mailer/confirmation_instructions.html.erb
        create    app/views/devise/mailer/email_changed.html.erb
        create    app/views/devise/mailer/password_change.html.erb
        create    app/views/devise/mailer/reset_password_instructions.html.erb
        create    app/views/devise/mailer/unlock_instructions.html.erb


  some of these views are tied to routes

    example: /users/sign_up is tied to the file app/views/devise/registrations/new.html.erb

when signing up a user you will have an error

  undefined method `user_url' for #<Devise::RegistrationsController

  this happens because the forms have turbo_stream format submissions and devise by default does not accept that

    so to change it you need to change the config at config/initializers/devise.rb

      you make sure there is a line like this:

        config.navigational_formats = ['*/*', :html, :turbo_stream]

    because you change an initializer file you need to reboot the server for changes to make effect

to log out a user you use in the view

  destroy_user_session_path

    example:
      <%= link_to "Log out", destroy_user_session_path, data: { "turbo-method": :delete }, class: "btn btn-primary" %>
